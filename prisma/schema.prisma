// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model RecipeProduct {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  slug              String          @unique
  recipeName        String
  recipePrice       Int
  recipeDescription String
  recipeImages      String[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  CategoryRecipe    CategoryRecipe? @relation(fields: [categoryRecipeId], references: [id])
  categoryRecipeId  String?         @db.ObjectId
}

model CategoryRecipe {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  slug                String          @unique
  categoryTitle       String
  categoryImages      String[]
  categoryDescription String
  RecipeProducts      RecipeProduct[]
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
}

model TableRecipe {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  slug                String          @unique
  TableTitle       String
  
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
}

enum UserRole {
  USER
  ADMIN
}
model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
 
  name     String
  email    String @unique
  password String
  profile  String
  role          UserRole  @default(USER)

  isVerfied     Boolean   @default(false)
  token         Int?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
